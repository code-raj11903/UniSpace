import React, { useState, useEffect } from 'react';
import { Line, Bar } from 'react-chartjs-2'; // Importing chart components
import { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend } from 'chart.js';

// Register Chart.js components
ChartJS.register(
  CategoryScale,
  LinearScale,
  PointElement,
  LineElement,
  BarElement,
  Title,
  Tooltip,
  Legend
);

// Assume this data is fetched based on the logged-in department
const loggedInDepartmentData = {
  name: "Mechanical Engineering",
  resourcesCount: 150,  // Number of resources added by the logged-in department
  revenue: 45000,  // Revenue generated by the logged-in department
  clientsCount: 10,  // Number of clients handled by the department
  resources: [
    { id: 1, name: "3D Printer", type: "Hardware" },
    { id: 2, name: "CNC Machine", type: "Machine" }
  ],
  clients: [
    { id: 1, name: "Client A", email: "clientA@example.com" },
    { id: 2, name: "Client B", email: "clientB@example.com" }
  ],
};

const DepartmentDashboard = () => {
  const [departmentInfo, setDepartmentInfo] = useState(null);

  useEffect(() => {
    // Simulate fetching department data (replace with API call if necessary)
    setDepartmentInfo(loggedInDepartmentData);  // Load logged-in department data
  }, []);

  if (!departmentInfo) {
    return <div>Loading...</div>;
  }

  // Chart data for revenue growth (specific to the logged-in department)
  const revenueChartData = {
    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],
    datasets: [
      {
        label: 'Revenue',
        data: [4000, 3000, 5000, 6000, 7000, 8000, departmentInfo.revenue],
        borderColor: '#6366F1',
        fill: false,
      },
    ],
  };

  // Chart data for client bookings (specific to the logged-in department)
  const clientChartData = {
    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],
    datasets: [
      {
        label: 'Bookings',
        data: [50, 100, 150, 200, 250, 275, departmentInfo.clientsCount],
        backgroundColor: '#34D399',
      },
    ],
  };

  return (
    <div className="department-dashboard-container p-6">
      

      {/* Metric Cards */}
      <div className="grid grid-cols-4 gap-4 mb-6">
        {/* Department Name Card */}
        <div className="bg-blue-500 text-white p-4 rounded shadow-md flex justify-center items-center h-full">
                <h3 className="text-2xl font-semibold">{departmentInfo.name.toUpperCase()}</h3>
         </div>

        {/* Resources Card */}
        <div className="bg-orange-500 text-white p-4 rounded shadow-md">
          <h3 className="text-xl font-semibold">RESOURCES</h3>
          <p className="text-3xl">{departmentInfo.resourcesCount}</p>
        </div>
        {/* Clients Card */}
        <div className="bg-green-500 text-white p-4 rounded shadow-md">
          <h3 className="text-xl font-semibold">CLIENTS</h3>
          <p className="text-3xl">{departmentInfo.clientsCount}</p>
        </div>
        {/* Revenue Card */}
        <div className="bg-red-500 text-white p-4 rounded shadow-md">
          <h3 className="text-xl font-semibold">REVENUE</h3>
          <p className="text-3xl">${departmentInfo.revenue.toLocaleString()}</p>
        </div>
      </div>

      {/* Charts Section */}
      <div className="grid grid-cols-2 gap-4">
        {/* Revenue Growth Chart */}
        <div className="bg-white p-4 rounded shadow-md">
          <Line data={revenueChartData} />
        </div>
        {/* Client Bookings Chart */}
        <div className="bg-white p-4 rounded shadow-md">
          <Bar data={clientChartData} />
        </div>
      </div>
    </div>
  );
};

export default DepartmentDashboard;
